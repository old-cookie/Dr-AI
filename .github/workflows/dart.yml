name: Flutter CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install dependencies
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl git unzip xz-utils libglu1-mesa

      # Step 3: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"

      # Step 4: Cache Flutter build artifacts
      - name: Cache Flutter build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ${{ github.workspace }}/.dart_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Step 5: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 6: Analyze the project source
      - name: Analyze project source
        run: flutter analyze

      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2

      #6 Building APK
      - name: Build APK
        run: flutter build apk --release

      #9 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk

      #10 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      #11 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

        #12 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV
        
        #13 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          tag: v${{ env.VERSION }}
          #,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz
      # Step 7: Run tests
      # - name: Run tests
      #   run: flutter test
